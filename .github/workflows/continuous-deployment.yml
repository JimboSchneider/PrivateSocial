name: Continuous Deployment

on:
  push:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '20.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: PrivateSocial.Web.React/package-lock.json

    - name: Restore dependencies
      run: |
        dotnet restore
        cd PrivateSocial.Web.React && npm ci

    - name: Build
      run: |
        dotnet build --no-restore --configuration Release
        cd PrivateSocial.Web.React && npm run build

    - name: Test
      run: |
        dotnet test --no-build --configuration Release
        cd PrivateSocial.Web.React && npm run test:unit -- --run

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/bin/Release/
          PrivateSocial.Web.React/dist/
        retention-days: 1

  build-containers:
    name: Build Container Images
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api
            context: .
            dockerfile: PrivateSocial.ApiService/Dockerfile
          - service: web
            context: ./PrivateSocial.Web.React
            dockerfile: Dockerfile
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.context }}/${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    needs: build-containers
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.privatesocial.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v2
      with:
        appSourcePath: ${{ github.workspace }}
        resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
        containerAppName: privatesocial-staging
        containerAppEnvironment: ${{ vars.AZURE_CONTAINER_APP_ENV }}
        targetPort: 8080
        ingress: external

    - name: Run smoke tests
      run: |
        echo "Running smoke tests against staging..."
        curl -f https://staging.privatesocial.app/health || exit 1
        curl -f https://staging.privatesocial.app/api/health || exit 1

  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://privatesocial.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v2
      with:
        appSourcePath: ${{ github.workspace }}
        resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
        containerAppName: privatesocial-prod
        containerAppEnvironment: ${{ vars.AZURE_CONTAINER_APP_ENV }}
        targetPort: 8080
        ingress: external

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: deploy-${{ github.sha }}
        release_name: Production Deploy ${{ github.sha }}
        body: |
          Automated production deployment
          
          Commit: ${{ github.sha }}
          Deployed by: ${{ github.actor }}
          
          [View Deployment](https://privatesocial.app)
        draft: false
        prerelease: false